#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ doors.\ \ The\ doors\ are\ labelled\ north,\ \r\n\ east,\ south,\ west.\ \ For\ each\ direction,\ the\ room\ stores\ a\ reference\r\n\ to\ the\ neighboring\ room,\ or\ null\ if\ there\ is\ no\ exit\ in\ that\ direction.\r\n\ \r\n\ @author\ \ M.\ Schuringa\r\n\ @version\ 0.2\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ doors.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment2.params=direction\ door
comment2.target=void\ setDoor(java.lang.String,\ Door)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment3.params=direction
comment3.target=Door\ getDoor(java.lang.String)
comment3.text=\r\n\ Define\ the\ doors\ of\ this\ room.\ \ Every\ direction\ either\ leads\r\n\ to\ another\ room\ or\ is\ null\ (no\ door\ there).\r\n\ @param\ direction\ The\ direction\ of\ the\ doors.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment4.params=
comment4.target=java.lang.String\ getExitString()
comment4.text=\r\n\ Returns\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Doors\:\ north\ west".\r\n\ @return\ The\ doors\ of\ a\ room.\r\n
comment5.params=
comment5.target=java.lang.String\ getShortDescription()
comment5.text=\r\n\ @return\ The\ short\ description\ of\ the\ room.\r\n
comment6.params=
comment6.target=java.lang.String\ getLongDescription()
comment6.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ doors\:\ north\ west\r\n\ \r\n\ @return\ A\ long\ decription\ of\ the\ room\ and\ the\ doors.\r\n
comment7.params=item
comment7.target=void\ addItem(Item)
comment7.text=\r\n\ Puts\ an\ item\ in\ the\ room.\r\n\ @param\ item\ The\ item\ put\ into\ the\ room.\r\n
comment8.params=name
comment8.target=Item\ getItem(java.lang.String)
comment8.text=\r\n\ Returns\ the\ item\ if\ it\ is\ available,\ otherwise\ it\ returns\ null.\r\n\ @param\ name\ The\ name\ of\ the\ item\ to\ be\ returned.\r\n\ @return\ The\ named\ item,\ or\ null\ if\ it\ is\ not\ in\ the\ room.\r\n
comment9.params=name
comment9.target=Item\ removeItem(java.lang.String)
comment9.text=\r\n\ Removes\ and\ returns\ the\ item\ if\ it\ is\ available,\ otherwise\ returns\ null.\r\n\ @param\ name\ The\ item\ to\ be\ removed.\r\n\ @return\ The\ item\ if\ removed,\ otherwise\ null.\r\n
numComments=10
